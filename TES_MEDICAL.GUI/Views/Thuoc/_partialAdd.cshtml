@model TES_MEDICAL.GUI.Models.Thuoc


    <style>
            .wrapper {
                padding: 0;
                margin: 0;
                font-family: Verdana, Geneva, Tahoma, sans-serif;
                /*        display: flex;
        */
            }

            label {
                margin-left: 10px;
                font-weight: 200;
            }

            .wrapper-title-1 {
                background-color: white;
                border-left: 8px solid rgb(82, 183, 136);
            }

                .wrapper-title-1 h4 {
                    padding: 2%;
                    font-size: 35px;
                    font-weight: 400;
                }

            .wrapper-left {
                margin-inline: 5%;
            }

            .wrapper-right {
                text-align: center;
            }

                .wrapper-right .form-group .btn-img {
                    width: 103%;
                    margin-left: -1%;
                    background-color: rgb(82, 183, 136);
                    color: white;
                }

                    .wrapper-right .form-group .btn-img:hover {
                        background-color: white;
                        border: 2px solid rgb(82, 183, 136);
                        color: rgb(82, 183, 136);
                    }
    </style>

<div class="wrapper-title-1 mb-4">
   <h4>Thêm nhân viên y tế</h4>
</div>
<div class="wrapper">
    @using (Html.BeginForm(null, null, FormMethod.Get, new { @class = "d-flex flex-wrap", name = "frm", id = "frm", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <input style="display:none" value="@Guid.NewGuid()" id="add_thuoc" />

        <div class="wrapper-left col-sm-7 row">
                <div class="text-danger"></div>
                <div class="form-group col-sm-6">
                    @Html.LabelFor(model => model.TenThuoc, "Tên thuốc", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-12">
                        @Html.EditorFor(model => model.TenThuoc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TenThuoc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-6">
                    @Html.LabelFor(model => model.DonGia, "Đơn giá", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-12">
                        @Html.EditorFor(model => model.DonGia, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DonGia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-6">
                    @Html.LabelFor(model => model.Vitri, "Vị trí", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-12">
                        @Html.EditorFor(model => model.Vitri, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Vitri, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-check col-sm-5">
                    <label class="form-label">Trạng thái</label>
                    <div>
                        <label class="form-check-label">
                            @Html.CheckBoxFor(model => model.TrangThai , new { @class = "form-check-input" }) Đang hoạt động
                        </label>
                    </div>
                </div>



                <div class="form-group col-12">
                    @Html.LabelFor(model => model.ThongTin, "Thông tin", htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-12">
                        @*@Html.EditorFor(model => model.ThongTin, new { htmlAttributes = new { @class = "form-control" } })*@
                        <textarea asp-for="ThongTin" class="form-control" rows="4"></textarea>
                        @Html.ValidationMessageFor(model => model.ThongTin, "", new { @class = "text-danger" })
                    </div>
                </div>
        </div>

        <!--Phần hình-->
        <div class="wrapper-right col-sm-3">
            <div class="form-group col-12">
                @*@Html.LabelFor(model => model.HinhAnh, "Hình ảnh", htmlAttributes: new { @class = "control-label col-md-6" })*@
                    @*@Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control", @id = "image-holder2" } })*@

                    @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
                    @*<input class="form-control" type="file" id="upload-back" accept="image/*" />*@
                    <div id="image-holder2">
                        <img src="~/images/drugs.jpg" style="width:250px;">
                    </div>
                    <label class="btn btn-img mt-4">
                        <i class="fa fa-image"></i>  Chọn hình<input style="display:none;" class="form-control" type="file" id="upload-back" accept="image/*" />
                    </label>
            </div>

        </div>
    }





</div>
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }


<script>

    $(document).ready(function () {

    });
    $('#upload-back').change(function (e) {
        var self = this;

        var file = e.target.files[0];
        const reader = new FileReader();
        reader.onloadend = () => {

            var img = "<img src='" + reader.result + "' style='width: 250px; height: 300px; object - fit: cover; object - position: center center;'/>"
            $('#image-holder2').html(img);
        };
        reader.readAsDataURL(file);

    });
</script>

