

@model TES_MEDICAL.GUI.Models.NhanVienModel

<style>
        .wrapper {
            padding: 0;
            margin: 0;
            font-family: Verdana, Geneva, Tahoma, sans-serif;
            /*        display: flex;
    */
        }

        label {
            margin-left: 10px;
            font-weight: 200;
        }

        .wrapper-title-1 {
            background-color: white;
            border-left: 8px solid rgb(82, 183, 136);
        }

            .wrapper-title-1 h4 {
                padding: 2%;
                font-size: 35px;
                font-weight: 400;
            }

        .wrapper-left {
            margin-inline: 5%;
        }

        .wrapper-right {
            text-align: center;
        }

            .wrapper-right .form-group .btn-img {
                width: 103%;
                margin-left: -1%;
                background-color: rgb(82, 183, 136);
                color: white;
            }

                .wrapper-right .form-group .btn-img:hover {
                    background-color: white;
                    border: 2px solid rgb(82, 183, 136);
                    color: rgb(82, 183, 136);
                }
</style>


<div class="wrapper-title-1 mb-4">
    <h4>Thêm nhân viên y tế</h4>
</div>
<div class="wrapper">
    @using (Html.BeginForm(null, null, FormMethod.Get, new { @class = "d-flex flex-wrap", name = "frm", id = "frm", enctype = "multipart/form-data" }))
    {
        //Phần thông tin

        @Html.AntiForgeryToken()

        <div class="wrapper-left col-sm-7 row">
                <div class="text-danger"></div>
                <div class="form-group col-12">
                    <label>
                        Họ tên
                    </label>
                    @*@Html.LabelFor(model => model.HoTen, "Họ tên", htmlAttributes: new { @class = "control-label col-md-6" })*@
                    <div class="col-12">
                        @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    <label>Email</label>
                    @*@Html.LabelFor(model => model.Email, "Email nhân viên", htmlAttributes: new { @class = "control-label col-md-6" })*@
                    <div class="col-12">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group col-md-6">
                    <label>Số điện thoại</label>
                    @*@Html.LabelFor(model => model.SDTNV, "Số điện thoại", htmlAttributes: new { @class = "control-label col-12" })*@
                    <div class="col-12">
                        @Html.EditorFor(model => model.SDTNV, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SDTNV, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label>Mật khẩu</label>
                    @*@Html.LabelFor(model => model.MatKhau, "Mật khẩu", htmlAttributes: new { @class = "control-label col-12" })*@
                    <div class="col-12">
                        @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label>Xác nhận mật khẩu</label>
                    @*@Html.LabelFor(model => model.ConfirmPassword, "Mật khẩu xác nhận", htmlAttributes: new { @class = "control-label col-12" })*@
                    <div class="col-12">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label>Chức vụ</label>
                    @*@Html.LabelFor(model => model.ChucVu, "Chức vụ", htmlAttributes: new { @class = "control-label col-md-6" })*@
                    <div class="col-12">
                        @*@Html.EditorFor(model => model.ChucVu, new { htmlAttributes = new { @class = "form-control" } })*@
                        <select asp-for="ChucVu" class="form-select">
                            <option value="0" selected>Chọn chức vụ</option>
                            <option value="1">Nhân viên</option>
                            <option value="2">Bác sĩ</option>
                            <option value="3">Dược sĩ</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.ChucVu, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-5">
                    @Html.LabelFor(model => model.ChuyenKhoa, "Chuyên khoa", htmlAttributes: new { @class = "control-label col-12" })
                    <div class="col-12">
                        <select asp-for="ChuyenKhoa" class="form-select" asp-items="@ViewBag.ChuyenKhoa" disabled>
                            <option value="">Chọn chuyên khoa</option>
                        </select>

                    </div>
                </div>

                <div class="form-group form-check col-md-4">
                    <label class="form-label">Trạng thái</label>
                    <div>
                        <label class="form-check-label">
                            @Html.CheckBoxFor(model => model.TrangThai, new { @class = "form-check-input" }) Đang hoạt động
                        </label>
                    </div>

                </div>
        </div>

        <!--Phần hình-->
        <div class="wrapper-right col-sm-3">
            <div class="form-group col-12">
                @*@Html.LabelFor(model => model.HinhAnh, "Hình ảnh", htmlAttributes: new { @class = "control-label col-md-6" })*@
                    @*@Html.EditorFor(model => model.Hinh, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Hinh, "", new { @class = "text-danger" })
                    <div id="image-holder2">
                        <img class="add-img" src="~/images/final.png" style="width:250px;">
                    </div>
                    <label class="btn btn-img mt-4">
                        <i class="fa fa-image"></i>  Chọn hình<input style="display:none;" class="form-control" type="file" id="upload-back" accept="image/*" />
                    </label>
            </div>

        </div>
    }

</div>




<script>

    $(document).ready(function () {

    });
    $("#ChucVu").change(function () {

        var id = $(this).val();

        if (id == 2) {
            $("#ChuyenKhoa").val("2c807362-58ac-4dae-81a7-9d4413f566c4").change();
            $('#ChuyenKhoa').prop("disabled", false);
        } else {
            $("#ChuyenKhoa").val("").change();
            $('#ChuyenKhoa').prop("disabled", true);
        }

    });

    //Script hiện hình client
    $('#upload-back').change(function (e) {
        var self = this;

        var file = e.target.files[0];
        const reader = new FileReader();
        reader.onloadend = () => {

            var img = "<img src='" + reader.result + "' style='width: 250px; height: 300px; object - fit: cover; object - position: center center;'/>"
            $('#image-holder2').html(img);
        };
        reader.readAsDataURL(file);

    });
</script>

