

@model TES_MEDICAL.GUI.Models.NhanVienYte

<h4 style="text-align:center; font-weight:bold">THÊM NHÂN VIÊN Y TẾ</h4>
<hr />
<div>
    @using (Html.BeginForm(null, null, FormMethod.Get, new { @class = "d-flex flex-wrap", name = "frm", id = "frm", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
         
        <div class="text-danger"></div>
                 
        
                                              <div class="form-group col-4"> 
              @Html.LabelFor(model => model.EmailNV, "EmailNV", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailNV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailNV, "", new { @class = "text-danger" })
            </div>
        </div>
                    
                                                        <div class="form-group col-4"> 
              @Html.LabelFor(model => model.MatKhau, "MatKhau", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
            </div>
        </div>
                    
                                                        <div class="form-group col-4"> 
              @Html.LabelFor(model => model.HoTen, "HoTen", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
            </div>
        </div>
                    
                                                        <div class="form-group col-4"> 
              @Html.LabelFor(model => model.SDTNV, "SDTNV", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SDTNV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SDTNV, "", new { @class = "text-danger" })
            </div>
        </div>
                    
                                                        <div class="form-group col-4"> 
              @Html.LabelFor(model => model.ChucVu, "ChucVu", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChucVu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChucVu, "", new { @class = "text-danger" })
            </div>
        </div>
                    
                                                        
                <div class="form-group form-check col-6">
                   
                   <label class="form-check-label">
                        @Html.CheckBoxFor(model=>model.TrangThai) TrangThai
                   </label>
                  </div>
                   
                                                        <div class="form-group col-4"> 
              @Html.LabelFor(model => model.Hinh, "Hinh", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hinh, "", new { @class = "text-danger" })
            </div>
        </div>
                    
                                          <div class="form-group col-4">
           @Html.LabelFor(model => model.ChuyenKhoa, "ChuyenKhoa", htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DropDownList("ChuyenKhoa", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ChuyenKhoa, "", new { @class = "text-danger" })
            </div>
        </div>
                         

                </div>
            </div>
        </div>

        <!--Phần hình-->
        <div class="col-sm-3">
            <div class="form-group col-12">
                @*@Html.LabelFor(model => model.HinhAnh, "Hình ảnh", htmlAttributes: new { @class = "control-label col-md-6" })*@
                <div class="col-12">
                    @*@Html.EditorFor(model => model.Hinh, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Hinh, "", new { @class = "text-danger" })

                    <label class="btn btn-success">
                        <i class="fa fa-image"></i>  Chọn hình<input style="display:none;" class="form-control" type="file" id="upload-back" accept="image/*" />
                    </label>
                    <div id="image-holder2" class="pt-2">
                        <img src="~/images/final.png" style='width: 100%'>
                    </div>
                </div>
            </div>

        </div>
    }

</div>




<script>

    $(document).ready(function () {

    });

    //Script hiện hình client
    $('#upload-back').change(function (e) {
        var self = this;

        var file = e.target.files[0];
        const reader = new FileReader();
        reader.onloadend = () => {

            var img = "<img src='" + reader.result + "' style='width: 100%'/>"
            $('#image-holder2').html(img);
        };
        reader.readAsDataURL(file);

    });
</script>

