

@model TES_MEDICAL.GUI.Models.NguoiDung

    <style>
                .main {
                    padding: 0;
                    margin: 0;
                    font-family: Verdana, Geneva, Tahoma, sans-serif;

                }

                label {
                    margin-left: 10px;
                    font-weight: 200;
                }

                .main-title-1 {
                    background-color: white;
                    border-left: 8px solid rgb(82, 183, 136);
                }

                    .main-title-1 h4 {
                        padding: 2%;
                        font-size: 35px;
                        font-weight: 400;
                    }

                .main-left {
                    margin-inline: 5%;
                }

                .main-right {
                    text-align: center;
                }

                    .main-right .form-group .btn-img {
                        width: 103%;
                        margin-left: -1%;
                        background-color: rgb(82, 183, 136);
                        color: white;
                    }

                        .main-right .form-group .btn-img:hover {
                            background-color: white;
                            border: 2px solid rgb(82, 183, 136);
                            color: rgb(82, 183, 136);
                        }
    </style>
    <div class="main-title-1 mb-4">
        <h4>Chỉnh sửa người dùng</h4>
    </div>
    <div class="main">
        @using (Html.BeginForm(null, null, FormMethod.Get, new { @class = "d-flex flex-wrap", name = "frm", id = "frm", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.MaNguoiDung)
            <div class="main-left col-sm-7 row">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group col-4" style="display:none">
                    <label class="control-label col-md-6" for="MaNguoiDung">MaNguoiDung</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaNguoiDung, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaNguoiDung, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-4" style="display:none">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-12">
                    <label>
                        Họ tên
                    </label>
                    @*@Html.LabelFor(model => model.HoTen, "Họ tên", htmlAttributes: new { @class = "control-label col-12" })*@
                    <div class="col-12">
                        @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label>Email</label>
                    @*@Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-6" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group col-md-6">
                    <label>Số điện thoại</label>
                    @*@Html.LabelFor(model => model.SDT, "Số điện thoại", htmlAttributes: new { @class = "control-label col-12" })*@
                    <div class="col-12">
                        @Html.EditorFor(model => model.SDT, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SDT, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label>Mật khẩu</label>
                    @*@Html.LabelFor(model => model.MatKhau, "Mật khẩu", htmlAttributes: new { @class = "control-label col-12" })*@
                    <div class="col-12">
                        @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label>Xác nhật mật khẩu</label>
                    @*@Html.LabelFor(model => model.ConfirmPassword, "Mật khẩu xác nhận", htmlAttributes: new { @class = "control-label col-12" })*@
                    <div class="col-12">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    <label>Chức vụ</label>
                    @*@Html.LabelFor(model => model.ChucVu, "Chức vụ", htmlAttributes: new { @class = "control-label col-12" })*@
                    <div class="col-12">
                        <select asp-for="ChucVu" class="form-select">
                            <option value="0" selected>Chọn chức vụ</option>
                            <option value="1">Admin</option>
                            <option value="2">User</option>
                        </select>
                        @*@Html.EditorFor(model => model.ChucVu, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.ChucVu, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-check col-md-5">
                    <label class="form-label">Trạng thái</label>
                    <div>
                        <label class="form-check-label">
                            @*@Html.CheckBoxFor(model => model.TrangThai) Đang hoạt động*@
                            <input type="checkbox" asp-for="TrangThai" value="true" /> Đang hoạt động

                        </label>
                    </div>

                </div>
            </div>

            <!--Phần hình-->
            <div class="main-right col-sm-3">
                <div class="form-group col-12">
                    @*@Html.LabelFor(model => model.HinhAnh, "Hình ảnh", htmlAttributes: new { @class = "control-label col-md-6" })*@
                        @*@Html.EditorFor(model => model.HinhAnh, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })


                        <div id="image-holder2">
                            <img src="~/images/@Model.HinhAnh" style='width: 250px'>
                        </div>
                        <label class="btn-img btn mt-4">
                            <i class="fa fa-image"></i>  Chọn hình<input style="display:none;" class="form-control" type="file" id="upload-back" accept="image/*" />
                        </label>

                </div>

            </div>

        }

    </div>

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>

        $(document).ready(function () {

        });

        $('#upload-back').change(function (e) {
            var self = this;

            var file = e.target.files[0];
            const reader = new FileReader();
            reader.onloadend = () => {
                var img = "<img src='" + reader.result + "' style='width: 250px; height: 300px; object - fit: cover; object - position: center center;'/>"
                //var img = "<img src='" + reader.result + "' style='width: 250px; height: 300px; object - fit: cover; object - position: center center;'/>"
                $('#image-holder2').html(img);
            };
            reader.readAsDataURL(file);

        });
    </script>


