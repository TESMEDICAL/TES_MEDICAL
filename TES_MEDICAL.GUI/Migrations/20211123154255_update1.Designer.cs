// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TES_MEDICAL.GUI.Models;

namespace TES_MEDICAL.GUI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211123154255_update1")]
    partial class update1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("TES_MEDICAL.ENTITIES.Models.ViewModel.ListResponse", b =>
                {
                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");
                });

            modelBuilder.Entity("TES_MEDICAL.ENTITIES.Models.ViewModel.ResponseChanDoan", b =>
                {
                    b.Property<Guid>("MaBenh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoTrieuChung")
                        .HasColumnType("int");

                    b.Property<string>("TenBenh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongCong")
                        .HasColumnType("int");
                });

            modelBuilder.Entity("TES_MEDICAL.ENTITIES.Models.ViewModel.ResponseHoaDon", b =>
                {
                    b.Property<string>("MaHD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayHD")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");
                });

            modelBuilder.Entity("TES_MEDICAL.ENTITIES.Models.ViewModel.ScalarInt", b =>
                {
                    b.Property<int>("Value")
                        .HasColumnType("int");
                });

            modelBuilder.Entity("TES_MEDICAL.ENTITIES.Models.ViewModel.ThongKeBenhViewModel", b =>
                {
                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<string>("tenBenh")
                        .HasColumnType("nvarchar(max)");
                });

            modelBuilder.Entity("TES_MEDICAL.ENTITIES.Models.ViewModel.ThongKeDichVuViewModel", b =>
                {
                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<int>("Thang")
                        .HasColumnType("int");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("decimal(18,2)");
                });

            modelBuilder.Entity("TES_MEDICAL.ENTITIES.Models.ViewModel.ThongKeLuotKhamViewModel", b =>
                {
                    b.Property<int>("luotKham")
                        .HasColumnType("int");

                    b.Property<int>("nam")
                        .HasColumnType("int");

                    b.Property<int>("thang")
                        .HasColumnType("int");
                });

            modelBuilder.Entity("TES_MEDICAL.ENTITIES.Models.ViewModel.ThongKeSoLuongThuoc", b =>
                {
                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<string>("tenThuoc")
                        .HasColumnType("nvarchar(max)");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.Benh", b =>
                {
                    b.Property<Guid>("MaBenh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaCK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenBenh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThongTin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBenh")
                        .HasName("PK__Benh__DB7E2D498DB80DEE");

                    b.HasIndex("MaCK");

                    b.ToTable("Benh");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.BenhNhan", b =>
                {
                    b.Property<Guid>("MaBN")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("MaBN")
                        .HasName("PK__BenhNhan__272475AD90105519");

                    b.ToTable("BenhNhan");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.CTTrieuChung", b =>
                {
                    b.Property<Guid>("MaBenh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaTrieuChung")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MaBenh", "MaTrieuChung")
                        .HasName("PK__CTTrieuC__E45FC2F731FF98AB");

                    b.HasIndex("MaTrieuChung");

                    b.ToTable("CTTrieuChung");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ChiTietDV", b =>
                {
                    b.Property<string>("MaHD")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("MaDV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("DonGiaDV")
                        .HasColumnType("money");

                    b.HasKey("MaHD", "MaDV")
                        .HasName("PK__ChiTietD__4557FE8526B532A5");

                    b.HasIndex("MaDV");

                    b.ToTable("ChiTietDV");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ChiTietSinhHieu", b =>
                {
                    b.Property<Guid>("MaSinhHieu")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaPK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenSH")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThongTinChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSinhHieu")
                        .HasName("PK__ChiTietS__F33E637FDFBD41BE");

                    b.HasIndex("MaPK");

                    b.ToTable("ChiTietSinhHieu");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ChiTietToaThuoc", b =>
                {
                    b.Property<Guid>("MaPK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaThuoc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Chieu")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DonGiaThuoc")
                        .HasColumnType("money");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanTrongNgay")
                        .HasColumnType("int");

                    b.Property<bool>("Sang")
                        .HasColumnType("bit");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<bool>("Trua")
                        .HasColumnType("bit");

                    b.Property<bool>("TruocKhian")
                        .HasColumnType("bit");

                    b.Property<int>("VienMoiLan")
                        .HasColumnType("int");

                    b.HasKey("MaPK", "MaThuoc")
                        .HasName("PK__ChiTietT__339EF89FCA764F6C");

                    b.HasIndex("MaThuoc");

                    b.ToTable("ChiTietToaThuoc");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ChuyenKhoa", b =>
                {
                    b.Property<Guid>("MaCK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenCK")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaCK")
                        .HasName("PK__ChuyenKh__27258E0D1F0FE375");

                    b.ToTable("ChuyenKhoa");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.DichVu", b =>
                {
                    b.Property<Guid>("MaDV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("money");

                    b.Property<string>("TenDV")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaDV")
                        .HasName("PK__DichVu__2725865790C1C308");

                    b.ToTable("DichVu");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MaNV")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("MaPK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayHD")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TongTien")
                        .HasColumnType("money");

                    b.HasKey("MaHoaDon")
                        .HasName("PK__HoaDon__835ED13BE8E6487A");

                    b.HasIndex(new[] { "MaNV" }, "IX_HoaDon_MaNV");

                    b.HasIndex(new[] { "MaPK" }, "IX_HoaDon_MaPK");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.HoaDonThuoc", b =>
                {
                    b.Property<Guid>("MaPK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaHD")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MaNV")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("NgayHD")
                        .HasColumnType("datetime");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("money");

                    b.HasKey("MaPK")
                        .HasName("PK__HoaDonTh__2725E7FD6887BBCA");

                    b.HasIndex("MaNV");

                    b.HasIndex(new[] { "MaHD" }, "UQ__HoaDonTh__2725A6E187D21950")
                        .IsUnique();

                    b.ToTable("HoaDonThuoc");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.NguoiDung", b =>
                {
                    b.Property<Guid>("MaNguoiDung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("ChucVu")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaNguoiDung")
                        .HasName("PK__NguoiDun__C539D7624ABCA545");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.NhanVienYte", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<byte>("ChucVu")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("ChuyenKhoa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Hinh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Theme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("PK__NhanVien__2725D70A99F2EA0C");

                    b.HasIndex("ChuyenKhoa");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("NhanVienYTe");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.PhieuDatLich", b =>
                {
                    b.Property<string>("MaPhieu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("NgayKham")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TenBN")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaPhieu")
                        .HasName("PK__PhieuDat__2660BFE037FE92E3");

                    b.ToTable("PhieuDatLich");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.PhieuKham", b =>
                {
                    b.Property<Guid>("MaPK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChanDoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HuyetAp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("KetQuaKham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaBN")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaBS")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("MaBenh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mach")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgayKham")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NgayTaiKham")
                        .HasColumnType("datetime");

                    b.Property<string>("NhietDo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("TrangThai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValueSql("(CONVERT([tinyint],(0)))");

                    b.Property<string>("TrieuChungSoBo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPK")
                        .HasName("PK__PhieuKha__2725E7FDD3F81957");

                    b.HasIndex("MaBenh");

                    b.HasIndex(new[] { "MaBN" }, "IX_PhieuKham_MaBN");

                    b.HasIndex(new[] { "MaBS" }, "IX_PhieuKham_MaBS");

                    b.ToTable("PhieuKham");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.STTPhieuKham", b =>
                {
                    b.Property<Guid>("MaPhieuKham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaUuTien")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaPhieuKham")
                        .HasName("PK__STTPhieu__FACA55DF6DAFE0DA");

                    b.ToTable("STTPhieuKham");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.STTTOATHUOC", b =>
                {
                    b.Property<Guid>("MaPK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("STT")
                        .HasColumnType("int");

                    b.Property<string>("UuTien")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("MaPK")
                        .HasName("PK__STTTOATH__2725E7FDFEC58D61");

                    b.ToTable("STTTOATHUOC");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.TheLoai", b =>
                {
                    b.Property<Guid>("MaTL")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenTL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaTL")
                        .HasName("PK__TheLoai__272500715188CB73");

                    b.ToTable("TheLoai");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.Thuoc", b =>
                {
                    b.Property<Guid>("MaThuoc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("money");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TenThuoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ThongTin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("Vitri")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("MaThuoc")
                        .HasName("PK__Thuoc__4BB1F620DA17E5F3");

                    b.ToTable("Thuoc");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.TinTuc", b =>
                {
                    b.Property<Guid>("MaBaiViet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaNguoiViet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MaTL")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("DateTime");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaBaiViet")
                        .HasName("PK__TinTuc__AEDD5647A9FE161F");

                    b.HasIndex("MaTL");

                    b.HasIndex(new[] { "MaNguoiViet" }, "IX_TinTuc_MaNguoiViet");

                    b.ToTable("TinTuc");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ToaThuoc", b =>
                {
                    b.Property<Guid>("MaPhieuKham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("TrangThai")
                        .HasColumnType("tinyint");

                    b.HasKey("MaPhieuKham")
                        .HasName("PK__ToaThuoc__FACA55DF1E8609CC");

                    b.ToTable("ToaThuoc");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.TrieuChung", b =>
                {
                    b.Property<Guid>("MatrieuChung")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenTrieuChung")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MatrieuChung")
                        .HasName("PK__TrieuChu__18521B702BAAC1B3");

                    b.HasIndex(new[] { "TenTrieuChung" }, "UQ__TrieuChu__38C0D5667814C499")
                        .IsUnique()
                        .HasFilter("[TenTrieuChung] IS NOT NULL");

                    b.ToTable("TrieuChung");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.NhanVienYte", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.NhanVienYte", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TES_MEDICAL.GUI.Models.NhanVienYte", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.NhanVienYte", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.Benh", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.ChuyenKhoa", "MaCKNavigation")
                        .WithMany("Benh")
                        .HasForeignKey("MaCK")
                        .HasConstraintName("FK__Benh__MaCK__1CF15040")
                        .IsRequired();

                    b.Navigation("MaCKNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.CTTrieuChung", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.Benh", "MaBenhNavigation")
                        .WithMany("CTTrieuChung")
                        .HasForeignKey("MaBenh")
                        .HasConstraintName("FK__CTTrieuCh__MaBen__19DFD96B")
                        .IsRequired();

                    b.HasOne("TES_MEDICAL.GUI.Models.TrieuChung", "MaTrieuChungNavigation")
                        .WithMany("CTTrieuChung")
                        .HasForeignKey("MaTrieuChung")
                        .HasConstraintName("FK__CTTrieuCh__MaTri__1AD3FDA4")
                        .IsRequired();

                    b.Navigation("MaBenhNavigation");

                    b.Navigation("MaTrieuChungNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ChiTietDV", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.DichVu", "MaDVNavigation")
                        .WithMany("ChiTietDV")
                        .HasForeignKey("MaDV")
                        .HasConstraintName("FK__ChiTietDV__MaDV__40058253")
                        .IsRequired();

                    b.HasOne("TES_MEDICAL.GUI.Models.HoaDon", "MaHDNavigation")
                        .WithMany("ChiTietDV")
                        .HasForeignKey("MaHD")
                        .HasConstraintName("FK__ChiTietDV__MaHD__3F115E1A")
                        .IsRequired();

                    b.Navigation("MaDVNavigation");

                    b.Navigation("MaHDNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ChiTietSinhHieu", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.PhieuKham", "MaPKNavigation")
                        .WithMany("ChiTietSinhHieu")
                        .HasForeignKey("MaPK")
                        .HasConstraintName("FK__ChiTietSin__MaPK__35BCFE0A")
                        .IsRequired();

                    b.Navigation("MaPKNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ChiTietToaThuoc", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.ToaThuoc", "MaPKNavigation")
                        .WithMany("ChiTietToaThuoc")
                        .HasForeignKey("MaPK")
                        .HasConstraintName("FK__ChiTietToa__MaPK__3A81B327")
                        .IsRequired();

                    b.HasOne("TES_MEDICAL.GUI.Models.Thuoc", "MaThuocNavigation")
                        .WithMany("ChiTietToaThuoc")
                        .HasForeignKey("MaThuoc")
                        .HasConstraintName("FK__ChiTietTo__MaThu__3B75D760")
                        .IsRequired();

                    b.Navigation("MaPKNavigation");

                    b.Navigation("MaThuocNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.HoaDon", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.NhanVienYte", "MaNVNavigation")
                        .WithMany("HoaDon")
                        .HasForeignKey("MaNV")
                        .HasConstraintName("FK__HoaDon__MaNV__35BCFE0A");

                    b.HasOne("TES_MEDICAL.GUI.Models.PhieuKham", "MaPKNavigation")
                        .WithMany("HoaDon")
                        .HasForeignKey("MaPK")
                        .HasConstraintName("FK__HoaDon__MaPK__34C8D9D1")
                        .IsRequired();

                    b.Navigation("MaNVNavigation");

                    b.Navigation("MaPKNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.HoaDonThuoc", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.NhanVienYte", "MaNVNavigation")
                        .WithMany("HoaDonThuoc")
                        .HasForeignKey("MaNV")
                        .HasConstraintName("FK__HoaDonThuo__MaNV__440B1D61");

                    b.HasOne("TES_MEDICAL.GUI.Models.ToaThuoc", "MaPKNavigation")
                        .WithOne("HoaDonThuoc")
                        .HasForeignKey("TES_MEDICAL.GUI.Models.HoaDonThuoc", "MaPK")
                        .HasConstraintName("FK__HoaDonThuo__MaPK__4316F928")
                        .IsRequired();

                    b.Navigation("MaNVNavigation");

                    b.Navigation("MaPKNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.NhanVienYte", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.ChuyenKhoa", "ChuyenKhoaNavigation")
                        .WithMany("NhanVienYte")
                        .HasForeignKey("ChuyenKhoa")
                        .HasConstraintName("FK__NhanVienY__Chuye__20C1E124");

                    b.Navigation("ChuyenKhoaNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.PhieuKham", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.BenhNhan", "MaBNNavigation")
                        .WithMany("PhieuKham")
                        .HasForeignKey("MaBN")
                        .HasConstraintName("FK__PhieuKham__MaBN__2B3F6F97")
                        .IsRequired();

                    b.HasOne("TES_MEDICAL.GUI.Models.NhanVienYte", "MaBSNavigation")
                        .WithMany("PhieuKham")
                        .HasForeignKey("MaBS")
                        .HasConstraintName("FK__PhieuKham__MaBS__2A4B4B5E");

                    b.HasOne("TES_MEDICAL.GUI.Models.Benh", "MaBenhNavigation")
                        .WithMany("PhieuKham")
                        .HasForeignKey("MaBenh")
                        .HasConstraintName("FK_PhieuKham_MaBenh");

                    b.Navigation("MaBenhNavigation");

                    b.Navigation("MaBNNavigation");

                    b.Navigation("MaBSNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.STTPhieuKham", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.PhieuKham", "MaPhieuKhamNavigation")
                        .WithOne("STTPhieuKham")
                        .HasForeignKey("TES_MEDICAL.GUI.Models.STTPhieuKham", "MaPhieuKham")
                        .HasConstraintName("FK__STTPhieuK__MaPhi__2B3F6F97")
                        .IsRequired();

                    b.Navigation("MaPhieuKhamNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.STTTOATHUOC", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.ToaThuoc", "MaPKNavigation")
                        .WithOne("STTTOATHUOC")
                        .HasForeignKey("TES_MEDICAL.GUI.Models.STTTOATHUOC", "MaPK")
                        .HasConstraintName("FK__STTTOATHUO__MaPK__35BCFE0A")
                        .IsRequired();

                    b.Navigation("MaPKNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.TinTuc", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.NguoiDung", "MaNguoiVietNavigation")
                        .WithMany("TinTuc")
                        .HasForeignKey("MaNguoiViet")
                        .HasConstraintName("FK__TinTuc__MaNguoiV__1273C1CD")
                        .IsRequired();

                    b.HasOne("TES_MEDICAL.GUI.Models.TheLoai", "MaTLNavigation")
                        .WithMany("TinTuc")
                        .HasForeignKey("MaTL")
                        .HasConstraintName("FK__TinTuc__MaTL__71D1E811")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaNguoiVietNavigation");

                    b.Navigation("MaTLNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ToaThuoc", b =>
                {
                    b.HasOne("TES_MEDICAL.GUI.Models.PhieuKham", "MaPhieuKhamNavigation")
                        .WithOne("ToaThuoc")
                        .HasForeignKey("TES_MEDICAL.GUI.Models.ToaThuoc", "MaPhieuKham")
                        .HasConstraintName("FK__ToaThuoc__MaPhie__38996AB5")
                        .IsRequired();

                    b.Navigation("MaPhieuKhamNavigation");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.Benh", b =>
                {
                    b.Navigation("CTTrieuChung");

                    b.Navigation("PhieuKham");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.BenhNhan", b =>
                {
                    b.Navigation("PhieuKham");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ChuyenKhoa", b =>
                {
                    b.Navigation("Benh");

                    b.Navigation("NhanVienYte");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.DichVu", b =>
                {
                    b.Navigation("ChiTietDV");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.HoaDon", b =>
                {
                    b.Navigation("ChiTietDV");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.NguoiDung", b =>
                {
                    b.Navigation("TinTuc");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.NhanVienYte", b =>
                {
                    b.Navigation("HoaDon");

                    b.Navigation("HoaDonThuoc");

                    b.Navigation("PhieuKham");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.PhieuKham", b =>
                {
                    b.Navigation("ChiTietSinhHieu");

                    b.Navigation("HoaDon");

                    b.Navigation("STTPhieuKham");

                    b.Navigation("ToaThuoc");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.TheLoai", b =>
                {
                    b.Navigation("TinTuc");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.Thuoc", b =>
                {
                    b.Navigation("ChiTietToaThuoc");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.ToaThuoc", b =>
                {
                    b.Navigation("ChiTietToaThuoc");

                    b.Navigation("HoaDonThuoc");

                    b.Navigation("STTTOATHUOC");
                });

            modelBuilder.Entity("TES_MEDICAL.GUI.Models.TrieuChung", b =>
                {
                    b.Navigation("CTTrieuChung");
                });
#pragma warning restore 612, 618
        }
    }
}
