@page "/login"

@using System.ComponentModel.DataAnnotations
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="col-md-6 offset-md-3 mt-5">
    <div class="alert alert-info">
        <h1>Đăng nhập vào hệ thống</h1>
    </div>
    <div class="card">

        <div class="card-body">
            @if(editContext==null)
            {
            <p><em>Loading...</em></p>
            }
            else
            {

            <EditForm EditContext="@editContext" OnSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Username</label>
                    <InputText @bind-Value="model.Username" class="form-control" />
                    <ValidationMessage For="@(() => model.Username)" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="model.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                <button class="btn btn-primary">
                    @if (loading)
                    {
        <span class="spinner-border spinner-border-sm mr-1"></span>}
                    Login
                </button>
                @if (!string.IsNullOrEmpty(error))
                {
        <div class="alert alert-danger mt-3 mb-0">@error</div>}
            </EditForm>
            }

        </div>
    </div>
</div>

@code { 
    public Model model { get; set; }
    private bool loading;
    private string error;
    public EditContext editContext { get; set; }
    protected override void OnInitialized()
    {
        if (AuthenticationService.User == null)
        {
            model = new Model();

            editContext = new EditContext(model);
            //AuthenticationService.Initialize();
        }

        else
        {
            NavigationManager.NavigateTo("index");
        }
    }


    private async void HandleValidSubmit()
    {
        if (editContext.Validate())
        {
            loading = true;
            try
            {
                await AuthenticationService.Login(model.Username, model.Password);
                var returnUrl = NavigationManager.QueryString("returnUrl") ?? "";
                NavigationManager.NavigateTo("index");
            }
            catch (Exception ex)
            {
                error = ex.Message;
                loading = false;
                StateHasChanged();
            }
        }



    }

    public class Model
    {
        [Required]
        public string Username { get; set; }

        [Required]
        public string Password { get; set; }
    } }